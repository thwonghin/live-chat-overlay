on:
  push:
    tags: 'v*'

name: Create Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.9.1'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn --immutable
      - name: Build Project
        run: yarn build:prod
      - name: Update version
        run: |
          export VER=$(echo "$GITHUB_REF" | sed -e 's/refs\/tags\/v//')
          yarn version:set $VER
      - uses: actions/upload-artifact@v1
        with:
          name: built-extension
          path: dist

  deploy-to-chrome:
    name: Deploy to Chrome Web Store
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: built-extension
          path: dist
      - run: cd dist && npx chrome-webstore-upload-cli upload --auto-publish
        env:
          EXTENSION_ID: ${{ secrets.CWS_EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CWS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CWS_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.CWS_REFRESH_TOKEN }}
